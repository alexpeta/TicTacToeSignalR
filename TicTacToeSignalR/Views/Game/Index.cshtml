@model TicTacToeSignalR.ViewModel.GameViewModel
@using TicTacToeSignalR.ExtensionMethods
@{
    ViewBag.Title = "Index";
}
<style type="text/css">
    .gameplace {
        float:left;
        width:400px;
    }
    .summary {
        float:left;
        width:400px;
        border:0.5px dotted black;    
    }
    .board-wrapper {
        width:100%;
    }
    
    table.board {
        width:360px;
        padding:0px;
        margin:0px;
        border:1px solid black;
        border-collapse:collapse;
    }
    table.board td {
        padding:0px;
        margin:0px;
        border:1px solid black;
    }
    table.board a.tile {
        width:120px;
        height:120px;
        display:block;
    }
    table.board a.selectedo,
    table.board a.o:hover {
       background-image:url("../../Content/themes/base/images/o.png");
       background-position:center center;
       background-repeat : no-repeat;
    }
    table.board a.selectedx,
     table.board a.x:hover {
       background-image:url("../../Content/themes/base/images/x.png");
       background-position:center center;
       background-repeat : no-repeat;
    }
    table.board a.invalid {
        cursor:not-allowed;
    }

    #lobby {
        margin-left:auto;
        margin-right:auto;
    }
    #lobby .left-side {
        width:400px;
        float:left;
    }
    #lobby .right-side {
        width:100px;
        float:left;
        border:1px solid red;
    }


    #lobby .left-side ul{
        list-style-type:none;
        padding:0px;
        margin:0px;
    }
    #lobby .left-side ul li a {
        display:block;
        text-align:right;
        text-decoration: none;
        font-family:Tahoma;
        font-size:18px;
    }
    .invite {
        margin-left:10px;
        background-color:#ff6a00;
        color:#fff;
        padding:10px;
    }
    #players-container {
        background-color:#e0dcdc;
    }
    #players-container li {
        padding:3px;
        margin-bottom:1px;
    }
        
    #players-container a {
        color:black;
        font-weight:normal;
    }
    #players-container a:hover {
        background-color:#0094ff;
    }
    .invite-answer {
        background-color:#fff;
        color:red !important;
        text-decoration:none;
        padding:3px;
    }
    #inviter {
        font-weight:bold;
    }
</style>



<div id="lobby-wrapper">
    <div id="lobby">
        <div class="left-side">
            <ul id="players-container"></ul>
        </div>
        <div class="left-side">
            <div id="invitation-container">
            </div>
            <div style="clear:left;"></div>
        </div>
        <div style="clear:left;"></div>
    </div>
</div>


<div class="board-wrapper" style="display:none;">
    <h2></h2>
    <div class="gameplace">
        @Html.RenderBoard(Model,'x')
    </div>
    <div class="summary">        
    </div>
    <div style="clear:both;"></div>
</div>


<script type="text/javascript">
 
    function GetInviteMarkup(id, fromNick) {
        var markup = '<div id="' + id + '" class="invite" style="width:400px;">';
        markup += '<div style="width:300px;float:left">';
        markup += '<span id="inviter">';
        markup += fromNick;
        markup += '</span> invited you to play a match.</div>';
        markup += '<div style="width:70px;float:right">';
        markup += '     <div style="width:35px;float:left">';
        markup += '         <a href="javascript:$.connection.gameHub.client.sendAnswer(';
        markup += "'" + id + "',true";
        markup += ')" class="invite-answer">Yes</a>';
        markup += '     </div>';
        markup += '     <div style="width:35px;float:left">';
        markup += '         <a href="javascript:$.connection.gameHub.client.sendAnswer(';
        markup += "'" + id + "',false";
        markup += ')" class="invite-answer">No</a>';
        markup += '     </div>';
        markup += '     <div style="clear:left;"></div>';
        markup += ' </div>';
        markup += ' <div style="clear:both;"></div>';
        markup += '</div>';
        return markup;
    }

    $(function () {
        //helpermethods
        $('.tile[data-allowed="True"]').click(function () {
            var self = $(this);
            var data = {
                xPosition: self.attr('data-x'),
                yPosition: self.attr('data-y'),
                PieceType: 'x'
            };
        });

 
        //signalR
        var proxy = $.connection.gameHub;
        proxy.state.name = '@TempData["nickname"]';

        proxy.client.test = function (data) {
            alert(data);
        }

        proxy.client.startGame = function() {
            $('#lobby-wrapper').fadeOut(200, function () {
                $('#invite').css("display", "none");
                $('.board-wrapper').fadeIn(200);
            });
        }

        proxy.client.sendAnswer = function (id, answer) {
            $('#' + id).fadeOut(answer == true ? 0 : 200);
            proxy.server.sendInviteAnswer({
                InviteId: id,
                Accepted: answer
            });
        }

        proxy.client.showRejectedMessage = function () {
            $('#invite').fadeOut(200);
        }

        proxy.client.showInviteModal = function (id,nick) {
            $('#invitation-container').append(GetInviteMarkup(id, nick));
        };

        proxy.client.inviteToPlayFromClient = function (toNick,toConnId) {
            proxy.server.inviteToPlay(
                {
                    "From": {
                        "Nick": proxy.state.name,
                        "Id": $.connection.gameHub.connection.id
                    },
                    "To": {
                        "Nick": toNick,
                        "Id": toConnId
                    }
                });
        }

        proxy.client.appendSummary = function (data) {
            $('.summary').append('<div>' + data + '</div>');
        }

        proxy.client.updateSummary = function (data) {
            $('.summary > div').remove();

            $.each(data, function () {
                $('.summary').append('<div>' + this + '</div>');
            });
        };

        proxy.client.refreshPlayersList = function (playerList) {
            $('#players-container > li').remove();

            $.each(playerList, function (index, player) {
                    var appendContent = '';
                    if (player != null && player.Nick != proxy.state.name) {
                        appendContent = '<li><a href="javascript:$.connection.gameHub.client.inviteToPlayFromClient(';
                        appendContent += "'"+ player.Nick+"',";
                        appendContent += "'" + player.Id + "'";
                        appendContent += ')" class="player" data-id="' + player.Id + '">' + player.Nick + '</a></li>';
                    }
                    else {
                        appendContent = '<li><a href="javascript:void(0)" data-id="' + player.Id + '">(o_O) ' + player.Nick + '</a></li>';
                    }
                    $('#players-container').append(appendContent);
                })
        }

        $.connection.hub.start().done(function () {
            proxy.server.playerJoined(
                {
                    Nick: proxy.state.name,
                    Id: $.connection.gameHub.connection.id
                });
        })
        .fail(function () {
            console.log('failed to load signalr');
        });
    });
</script>