@model TicTacToeSignalR.ViewModel.ProfileViewModel
@{
    ViewBag.Title = "Tic Tac Toe Game";
}
<style type="text/css">
    .gameplace {
        float:left;
        width:400px;
    }
    .summary {
        float:left;
        width:400px;
        border:0.5px dotted black;    
    }
    .board-wrapper {
        width:100%;
    }
    
    table.board {
        width:360px;
        padding:0px;
        margin:0px;
        border:1px solid black;
        border-collapse:collapse;
    }
    table.board td {
        padding:0px;
        margin:0px;
        border:1px solid black;
    }
    table.board a.tile {
        width:120px;
        height:120px;
        display:block;
    }
    table.board a.selectedo,
    table.board a.o:hover {
       background-image:url("../../Content/themes/base/images/o.png");
       background-position:center center;
       background-repeat : no-repeat;
    }
    table.board a.selectedx,
     table.board a.x:hover {
       background-image:url("../../Content/themes/base/images/x.png");
       background-position:center center;
       background-repeat : no-repeat;
    }
    table.board a.invalid {
        cursor:not-allowed;
    }

    #lobby {
        margin-left:auto;
        margin-right:auto;
    }
    #lobby .left-side {
        width:400px;
        float:left;
        margin-left:10px;
        margin-top:10px;
        background-color:black;
    }
    #lobby .right-side {
        width:100px;
        float:left;
        border:1px solid red;
    }
    ul{
        list-style-type:none;
        padding:0px;
    }
    li {
        margin-top: 3px;
    }
    .invite {
        background-color:#ff6a00;
        color:#fff;
        padding:10px;
    }
    #players-container {
        margin-left:10px;
        margin-right:10px; 
        margin-bottom:10px;
    }
    .invite-answer {
        background-color:#fff;
        color:red !important;
        text-decoration:none;
        padding:3px;
    }
    #inviter {
        font-weight:bold;
    }
    #game-session {
        color:#808080;
        margin-left: 10px;
        margin-top: 10px;
        width: 400px;
    }
</style>



<div id="lobby-wrapper">

    <div id="lobby">
        <div class="left-side">
            <div>
                <h1>Lobby</h1>
            </div>
            <ul id="players-container"></ul>
        </div>
        <div class="left-side">
            <div id="invitation-container">
            </div>
            <div style="clear:left;"></div>
        </div>
        <div style="clear:left;"></div>
    </div>
    <div id="game-session" style="display:none;">
         <div class="left-side">
             <div>
                 Game id: 123 <br />
                 Alex : x <br />
                 Bogdan : o
             </div>
        </div>
        <div class="left-side">
            <a href="javascript:void(0);" class="button">
               Quit  to lobby
            </a>
            <a href="javascript:void(0);" class="button">
              Surrender
            </a>
        </div>
         <div style="clear:left;"></div>
        <ul id="game-session-players"></ul>
    </div>
</div>


<div class="board-wrapper" style="display:none;">
    <h2></h2>
    <div class="gameplace">
    </div>
    <div class="summary">        
    </div>
    <div style="clear:both;"></div>
</div>


<script type="text/javascript">
    $(function () {
        //helpermethods
        //$('.tile[data-allowed="True"]').click(function () {
        //    var self = $(this);
        //    var data = {
        //        xPosition: self.attr('data-x'),
        //        yPosition: self.attr('data-y'),
        //        PieceType: 'x'
        //    };
        //});

        //signalR
        var proxy = $.connection.gameHub;
        proxy.state.name = '@Model.Nick';
        proxy.state.avatar = '@Model.Avatar';

        proxy.client.test = function (data) {
            alert(data);
        }
        
        proxy.client.callMovePiece = function (px,py,paramPiece,cellId) {
            //making selection for current player
            var selectedCell = $('#' + cellId);
            selectedCell.removeAttr('href');
            selectedCell.removeClass(paramPiece).addClass('selected' + paramPiece);

            //preparing what to send to the server
            var move = {
                x: px,
                y: py,
                piece: paramPiece
            };
            var gameId = $('.board').attr('data-id');
            var playerId = $.connection.gameHub.connection.id;
            proxy.server.callMovePiece(gameId, move, playerId);
        }

        proxy.client.movePiece = function (message, movement) {
            proxy.client.appendSummary(message);
        }

        proxy.client.startGame = function() {
            $('#lobby-wrapper').fadeOut(200, function () {
                $('#invite').css("display", "none");
                $('.board-wrapper').fadeIn(200);
            });
        }

        proxy.client.sendAnswer = function (id, answer) {
            $('#' + id).fadeOut(answer == true ? 0 : 200);
            proxy.server.sendInviteAnswer({
                InviteId: id,
                Accepted: answer
            });
        }

        proxy.client.clientRenderBoard = function (boardMarkup,playersList) {
            $('.gameplace').append(boardMarkup);
            $('.board-wrapper').css("display", "block");
            $('#lobby').fadeOut(100);

            $('#game-session-players > li').remove();

            $.each(playersList, function (index, player) {
                var str = '<li>' + player.Nick + '</li>';
                $('#game-session-players').append(str);
            });

            $('#game-session').css('display', 'block');
        }

        proxy.client.showRejectedMessage = function () {
            $('#invite').fadeOut(200);
        }

        proxy.client.showInviteModal = function (markup) {
            $('#invitation-container').append(markup);
        };

        proxy.client.inviteToPlayFromClient = function (toNick,toConnId) {
            proxy.server.inviteToPlay(
                {
                    "From": {
                        "Nick": proxy.state.name,
                        "Id": $.connection.gameHub.connection.id
                    },
                    "To": {
                        "Nick": toNick,
                        "Id": toConnId
                    }
                });
        }

        proxy.client.appendSummary = function (data) {
            $('.summary').append('<div>' + data + '</div>');
        }

        proxy.client.updateSummary = function (data) {
            $('.summary > div').remove();

            $.each(data, function () {
                $('.summary').append('<div>' + this + '</div>');
            });
        };

        proxy.client.refreshPlayersList = function (playerList) {
            $('#players-container > li').remove();

            $.each(playerList, function (index, player) {
                    var appendContent = '';
                    if (player != null && player.Nick != proxy.state.name) {
                        appendContent = '<li>';
                        appendContent += '<a href="javascript:$.connection.gameHub.client.inviteToPlayFromClient(';
                        appendContent += "'"+ player.Nick+"',";
                        appendContent += "'" + player.Id + "'";
                        appendContent += ')" class="'+player.Avatar+'">' + player.Nick + '</a></li>';
                    }
                    else {
                        appendContent = '<li>';
                        appendContent += '<a href="javascript:void(0)" data-id="' + player.Id + '" class="'+player.Avatar+' selected">' + player.Nick + '</a></li>';
                    }
                    $('#players-container').append(appendContent);
                })
        }


        proxy.server.autoCloseInvite = function (guid) {
        }

        $.connection.hub.start().done(function () {
            proxy.server.playerJoined(
                {
                    Nick: proxy.state.name,
                    Id: $.connection.gameHub.connection.id,
                    Avatar: proxy.state.avatar
                });
        })
        .fail(function () {
            console.log('failed to load signalr');
        });
    });
</script>